// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Anchovy.API.Client;
using Anchovy.API.Client.Models;
using Microsoft.Rest;

namespace Anchovy.API.Client
{
    public static partial class PizzasExtensions
    {
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        public static Pizza DeletePizza(this IPizzas operations, int id)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IPizzas)s).DeletePizzaAsync(id);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Pizza> DeletePizzaAsync(this IPizzas operations, int id, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<Anchovy.API.Client.Models.Pizza> result = await operations.DeletePizzaWithOperationResponseAsync(id, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        public static Pizza GetPizza(this IPizzas operations, int id)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IPizzas)s).GetPizzaAsync(id);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Pizza> GetPizzaAsync(this IPizzas operations, int id, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<Anchovy.API.Client.Models.Pizza> result = await operations.GetPizzaWithOperationResponseAsync(id, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        public static IList<Pizza> GetPizzas(this IPizzas operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IPizzas)s).GetPizzasAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<IList<Pizza>> GetPizzasAsync(this IPizzas operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<System.Collections.Generic.IList<Anchovy.API.Client.Models.Pizza>> result = await operations.GetPizzasWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='pizza'>
        /// Required.
        /// </param>
        public static Pizza PostPizza(this IPizzas operations, Pizza pizza)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IPizzas)s).PostPizzaAsync(pizza);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='pizza'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<Pizza> PostPizzaAsync(this IPizzas operations, Pizza pizza, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<Anchovy.API.Client.Models.Pizza> result = await operations.PostPizzaWithOperationResponseAsync(pizza, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        /// <param name='pizza'>
        /// Required.
        /// </param>
        public static object PutPizza(this IPizzas operations, int id, Pizza pizza)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IPizzas)s).PutPizzaAsync(id, pizza);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Anchovy.API.Client.IPizzas.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        /// <param name='pizza'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<object> PutPizzaAsync(this IPizzas operations, int id, Pizza pizza, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<object> result = await operations.PutPizzaWithOperationResponseAsync(id, pizza, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
