// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Anchovy.API.Client.Models;
using Newtonsoft.Json.Linq;

namespace Anchovy.API.Client.Models
{
    public partial class Shift
    {
        private Cook _cook;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Cook Cook
        {
            get { return this._cook; }
            set { this._cook = value; }
        }
        
        private int? _cookId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? CookId
        {
            get { return this._cookId; }
            set { this._cookId = value; }
        }
        
        private DateTimeOffset? _endTime;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? EndTime
        {
            get { return this._endTime; }
            set { this._endTime = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private DateTimeOffset? _startTime;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? StartTime
        {
            get { return this._startTime; }
            set { this._startTime = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Shift class.
        /// </summary>
        public Shift()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken cookValue = inputObject["Cook"];
                if (cookValue != null && cookValue.Type != JTokenType.Null)
                {
                    Cook cook = new Cook();
                    cook.DeserializeJson(cookValue);
                    this.Cook = cook;
                }
                JToken cookIdValue = inputObject["CookId"];
                if (cookIdValue != null && cookIdValue.Type != JTokenType.Null)
                {
                    this.CookId = ((int)cookIdValue);
                }
                JToken endTimeValue = inputObject["EndTime"];
                if (endTimeValue != null && endTimeValue.Type != JTokenType.Null)
                {
                    this.EndTime = ((DateTimeOffset)endTimeValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken startTimeValue = inputObject["StartTime"];
                if (startTimeValue != null && startTimeValue.Type != JTokenType.Null)
                {
                    this.StartTime = ((DateTimeOffset)startTimeValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Shift
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Cook != null)
            {
                outputObject["Cook"] = this.Cook.SerializeJson(null);
            }
            if (this.CookId != null)
            {
                outputObject["CookId"] = this.CookId.Value;
            }
            if (this.EndTime != null)
            {
                outputObject["EndTime"] = this.EndTime.Value;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.StartTime != null)
            {
                outputObject["StartTime"] = this.StartTime.Value;
            }
            return outputObject;
        }
    }
}
