// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Anchovy.API.Client.Models;
using Newtonsoft.Json.Linq;

namespace Anchovy.API.Client.Models
{
    public partial class Pizza
    {
        private Crust _crust;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Crust Crust
        {
            get { return this._crust; }
            set { this._crust = value; }
        }
        
        private int? _crustId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? CrustId
        {
            get { return this._crustId; }
            set { this._crustId = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private bool? _menuItem;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? MenuItem
        {
            get { return this._menuItem; }
            set { this._menuItem = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private Sauce _sauce;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Sauce Sauce
        {
            get { return this._sauce; }
            set { this._sauce = value; }
        }
        
        private int? _sauceId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? SauceId
        {
            get { return this._sauceId; }
            set { this._sauceId = value; }
        }
        
        private Size _size;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Size Size
        {
            get { return this._size; }
            set { this._size = value; }
        }
        
        private int? _sizeId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? SizeId
        {
            get { return this._sizeId; }
            set { this._sizeId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Pizza class.
        /// </summary>
        public Pizza()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken crustValue = inputObject["Crust"];
                if (crustValue != null && crustValue.Type != JTokenType.Null)
                {
                    Crust crust = new Crust();
                    crust.DeserializeJson(crustValue);
                    this.Crust = crust;
                }
                JToken crustIdValue = inputObject["CrustId"];
                if (crustIdValue != null && crustIdValue.Type != JTokenType.Null)
                {
                    this.CrustId = ((int)crustIdValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken menuItemValue = inputObject["MenuItem"];
                if (menuItemValue != null && menuItemValue.Type != JTokenType.Null)
                {
                    this.MenuItem = ((bool)menuItemValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken sauceValue = inputObject["Sauce"];
                if (sauceValue != null && sauceValue.Type != JTokenType.Null)
                {
                    Sauce sauce = new Sauce();
                    sauce.DeserializeJson(sauceValue);
                    this.Sauce = sauce;
                }
                JToken sauceIdValue = inputObject["SauceId"];
                if (sauceIdValue != null && sauceIdValue.Type != JTokenType.Null)
                {
                    this.SauceId = ((int)sauceIdValue);
                }
                JToken sizeValue = inputObject["Size"];
                if (sizeValue != null && sizeValue.Type != JTokenType.Null)
                {
                    Size size = new Size();
                    size.DeserializeJson(sizeValue);
                    this.Size = size;
                }
                JToken sizeIdValue = inputObject["SizeId"];
                if (sizeIdValue != null && sizeIdValue.Type != JTokenType.Null)
                {
                    this.SizeId = ((int)sizeIdValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Pizza
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Crust != null)
            {
                outputObject["Crust"] = this.Crust.SerializeJson(null);
            }
            if (this.CrustId != null)
            {
                outputObject["CrustId"] = this.CrustId.Value;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.MenuItem != null)
            {
                outputObject["MenuItem"] = this.MenuItem.Value;
            }
            if (this.Name != null)
            {
                outputObject["Name"] = this.Name;
            }
            if (this.Sauce != null)
            {
                outputObject["Sauce"] = this.Sauce.SerializeJson(null);
            }
            if (this.SauceId != null)
            {
                outputObject["SauceId"] = this.SauceId.Value;
            }
            if (this.Size != null)
            {
                outputObject["Size"] = this.Size.SerializeJson(null);
            }
            if (this.SizeId != null)
            {
                outputObject["SizeId"] = this.SizeId.Value;
            }
            return outputObject;
        }
    }
}
