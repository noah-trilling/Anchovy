// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Net.Http;
using Anchovy.API.Client;
using Microsoft.Rest;

namespace Anchovy.API.Client
{
    public partial class AnchovyAPIService : ServiceClient<AnchovyAPIService>, IAnchovyAPIService
    {
        private Uri _baseUri;
        
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        public Uri BaseUri
        {
            get { return this._baseUri; }
            set { this._baseUri = value; }
        }
        
        private ServiceClientCredentials _credentials;
        
        /// <summary>
        /// Credentials for authenticating with the service.
        /// </summary>
        public ServiceClientCredentials Credentials
        {
            get { return this._credentials; }
            set { this._credentials = value; }
        }
        
        private ICooks _cooks;
        
        public virtual ICooks Cooks
        {
            get { return this._cooks; }
        }
        
        private ICrusts _crusts;
        
        public virtual ICrusts Crusts
        {
            get { return this._crusts; }
        }
        
        private ICustomers _customers;
        
        public virtual ICustomers Customers
        {
            get { return this._customers; }
        }
        
        private ILines _lines;
        
        public virtual ILines Lines
        {
            get { return this._lines; }
        }
        
        private IManagers _managers;
        
        public virtual IManagers Managers
        {
            get { return this._managers; }
        }
        
        private IMenuListings _menuListings;
        
        public virtual IMenuListings MenuListings
        {
            get { return this._menuListings; }
        }
        
        private IOrderLines _orderLines;
        
        public virtual IOrderLines OrderLines
        {
            get { return this._orderLines; }
        }
        
        private IOrders _orders;
        
        public virtual IOrders Orders
        {
            get { return this._orders; }
        }
        
        private IPizzas _pizzas;
        
        public virtual IPizzas Pizzas
        {
            get { return this._pizzas; }
        }
        
        private IPizzaToppings _pizzaToppings;
        
        public virtual IPizzaToppings PizzaToppings
        {
            get { return this._pizzaToppings; }
        }
        
        private ISauces _sauces;
        
        public virtual ISauces Sauces
        {
            get { return this._sauces; }
        }
        
        private IShifts _shifts;
        
        public virtual IShifts Shifts
        {
            get { return this._shifts; }
        }
        
        private ISizes _sizes;
        
        public virtual ISizes Sizes
        {
            get { return this._sizes; }
        }
        
        private IToppings _toppings;
        
        public virtual IToppings Toppings
        {
            get { return this._toppings; }
        }
        
        /// <summary>
        /// Initializes a new instance of the AnchovyAPIService class.
        /// </summary>
        public AnchovyAPIService()
            : base()
        {
            this._cooks = new Cooks(this);
            this._crusts = new Crusts(this);
            this._customers = new Customers(this);
            this._lines = new Lines(this);
            this._managers = new Managers(this);
            this._menuListings = new MenuListings(this);
            this._orderLines = new OrderLines(this);
            this._orders = new Orders(this);
            this._pizzas = new Pizzas(this);
            this._pizzaToppings = new PizzaToppings(this);
            this._sauces = new Sauces(this);
            this._shifts = new Shifts(this);
            this._sizes = new Sizes(this);
            this._toppings = new Toppings(this);
            this._baseUri = new Uri("http://localhost:59971");
        }
        
        /// <summary>
        /// Initializes a new instance of the AnchovyAPIService class.
        /// </summary>
        /// <param name='handlers'>
        /// Optional. The set of delegating handlers to insert in the http
        /// client pipeline.
        /// </param>
        public AnchovyAPIService(params DelegatingHandler[] handlers)
            : base(handlers)
        {
            this._cooks = new Cooks(this);
            this._crusts = new Crusts(this);
            this._customers = new Customers(this);
            this._lines = new Lines(this);
            this._managers = new Managers(this);
            this._menuListings = new MenuListings(this);
            this._orderLines = new OrderLines(this);
            this._orders = new Orders(this);
            this._pizzas = new Pizzas(this);
            this._pizzaToppings = new PizzaToppings(this);
            this._sauces = new Sauces(this);
            this._shifts = new Shifts(this);
            this._sizes = new Sizes(this);
            this._toppings = new Toppings(this);
            this._baseUri = new Uri("http://localhost:59971");
        }
        
        /// <summary>
        /// Initializes a new instance of the AnchovyAPIService class.
        /// </summary>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The set of delegating handlers to insert in the http
        /// client pipeline.
        /// </param>
        public AnchovyAPIService(HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
            : base(rootHandler, handlers)
        {
            this._cooks = new Cooks(this);
            this._crusts = new Crusts(this);
            this._customers = new Customers(this);
            this._lines = new Lines(this);
            this._managers = new Managers(this);
            this._menuListings = new MenuListings(this);
            this._orderLines = new OrderLines(this);
            this._orders = new Orders(this);
            this._pizzas = new Pizzas(this);
            this._pizzaToppings = new PizzaToppings(this);
            this._sauces = new Sauces(this);
            this._shifts = new Shifts(this);
            this._sizes = new Sizes(this);
            this._toppings = new Toppings(this);
            this._baseUri = new Uri("http://localhost:59971");
        }
        
        /// <summary>
        /// Initializes a new instance of the AnchovyAPIService class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The set of delegating handlers to insert in the http
        /// client pipeline.
        /// </param>
        public AnchovyAPIService(Uri baseUri, params DelegatingHandler[] handlers)
            : this(handlers)
        {
            if (baseUri == null)
            {
                throw new ArgumentNullException("baseUri");
            }
            this._baseUri = baseUri;
        }
        
        /// <summary>
        /// Initializes a new instance of the AnchovyAPIService class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Credentials for authenticating with the service.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The set of delegating handlers to insert in the http
        /// client pipeline.
        /// </param>
        public AnchovyAPIService(ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
            : this(handlers)
        {
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials");
            }
            this._credentials = credentials;
            
            if (this.Credentials != null)
            {
                this.Credentials.InitializeServiceClient(this);
            }
        }
        
        /// <summary>
        /// Initializes a new instance of the AnchovyAPIService class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='credentials'>
        /// Required. Credentials for authenticating with the service.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The set of delegating handlers to insert in the http
        /// client pipeline.
        /// </param>
        public AnchovyAPIService(Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
            : this(handlers)
        {
            if (baseUri == null)
            {
                throw new ArgumentNullException("baseUri");
            }
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials");
            }
            this._baseUri = baseUri;
            this._credentials = credentials;
            
            if (this.Credentials != null)
            {
                this.Credentials.InitializeServiceClient(this);
            }
        }
    }
}
